//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RLRMWF
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class RLRMDBEntities : DbContext
    {
        public RLRMDBEntities()
            : base("name=RLRMDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AlphabeticDate> AlphabeticDates { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<ProductNumberSequence> ProductNumberSequences { get; set; }
        public virtual DbSet<Receiver> Receivers { get; set; }
        public virtual DbSet<UsageLog> UsageLogs { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<Material> Materials { get; set; }
        public virtual DbSet<MaterialId> MaterialIds { get; set; }
        public virtual DbSet<MaterialNumber> MaterialNumbers { get; set; }
        public virtual DbSet<RawMaterialLog> RawMaterialLogs { get; set; }
        public virtual DbSet<SampleSubmit> SampleSubmits { get; set; }
        public virtual DbSet<Vendor> Vendors { get; set; }
        public virtual DbSet<VendorBatch> VendorBatches { get; set; }
    
        public virtual int AddVendorBatch(Nullable<int> materailNumber, string name, string batchNumber, Nullable<int> qty)
        {
            var materailNumberParameter = materailNumber.HasValue ?
                new ObjectParameter("materailNumber", materailNumber) :
                new ObjectParameter("materailNumber", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var batchNumberParameter = batchNumber != null ?
                new ObjectParameter("batchNumber", batchNumber) :
                new ObjectParameter("batchNumber", typeof(string));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("qty", qty) :
                new ObjectParameter("qty", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddVendorBatch", materailNumberParameter, nameParameter, batchNumberParameter, qtyParameter);
        }
    
        public virtual int RawMaterialUpdate(Nullable<int> materialNumber, string vendorName, string vendorBatchNumber, Nullable<int> drumWeight, Nullable<int> sapBatchNumber, string containerNumber, Nullable<int> quantity)
        {
            var materialNumberParameter = materialNumber.HasValue ?
                new ObjectParameter("materialNumber", materialNumber) :
                new ObjectParameter("materialNumber", typeof(int));
    
            var vendorNameParameter = vendorName != null ?
                new ObjectParameter("vendorName", vendorName) :
                new ObjectParameter("vendorName", typeof(string));
    
            var vendorBatchNumberParameter = vendorBatchNumber != null ?
                new ObjectParameter("vendorBatchNumber", vendorBatchNumber) :
                new ObjectParameter("vendorBatchNumber", typeof(string));
    
            var drumWeightParameter = drumWeight.HasValue ?
                new ObjectParameter("drumWeight", drumWeight) :
                new ObjectParameter("drumWeight", typeof(int));
    
            var sapBatchNumberParameter = sapBatchNumber.HasValue ?
                new ObjectParameter("sapBatchNumber", sapBatchNumber) :
                new ObjectParameter("sapBatchNumber", typeof(int));
    
            var containerNumberParameter = containerNumber != null ?
                new ObjectParameter("containerNumber", containerNumber) :
                new ObjectParameter("containerNumber", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RawMaterialUpdate", materialNumberParameter, vendorNameParameter, vendorBatchNumberParameter, drumWeightParameter, sapBatchNumberParameter, containerNumberParameter, quantityParameter);
        }
    
        public virtual int MaterialInsert(Nullable<int> materialNumber, string materialName, string nameAbreviation, string permitNumber, string rawMaterialCode, string productCode, Nullable<bool> carbonDrumRequired, Nullable<int> carbonDrumDaysAllowed, Nullable<int> carbonDrumWeightAllowed, Nullable<bool> batchManaged, Nullable<bool> requiresProcessOrder, string unitOfIssue, Nullable<bool> isRawMaterial, string vendorName, Nullable<int> sequenceNumber)
        {
            var materialNumberParameter = materialNumber.HasValue ?
                new ObjectParameter("materialNumber", materialNumber) :
                new ObjectParameter("materialNumber", typeof(int));
    
            var materialNameParameter = materialName != null ?
                new ObjectParameter("materialName", materialName) :
                new ObjectParameter("materialName", typeof(string));
    
            var nameAbreviationParameter = nameAbreviation != null ?
                new ObjectParameter("nameAbreviation", nameAbreviation) :
                new ObjectParameter("nameAbreviation", typeof(string));
    
            var permitNumberParameter = permitNumber != null ?
                new ObjectParameter("permitNumber", permitNumber) :
                new ObjectParameter("permitNumber", typeof(string));
    
            var rawMaterialCodeParameter = rawMaterialCode != null ?
                new ObjectParameter("rawMaterialCode", rawMaterialCode) :
                new ObjectParameter("rawMaterialCode", typeof(string));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("productCode", productCode) :
                new ObjectParameter("productCode", typeof(string));
    
            var carbonDrumRequiredParameter = carbonDrumRequired.HasValue ?
                new ObjectParameter("carbonDrumRequired", carbonDrumRequired) :
                new ObjectParameter("carbonDrumRequired", typeof(bool));
    
            var carbonDrumDaysAllowedParameter = carbonDrumDaysAllowed.HasValue ?
                new ObjectParameter("carbonDrumDaysAllowed", carbonDrumDaysAllowed) :
                new ObjectParameter("carbonDrumDaysAllowed", typeof(int));
    
            var carbonDrumWeightAllowedParameter = carbonDrumWeightAllowed.HasValue ?
                new ObjectParameter("carbonDrumWeightAllowed", carbonDrumWeightAllowed) :
                new ObjectParameter("carbonDrumWeightAllowed", typeof(int));
    
            var batchManagedParameter = batchManaged.HasValue ?
                new ObjectParameter("batchManaged", batchManaged) :
                new ObjectParameter("batchManaged", typeof(bool));
    
            var requiresProcessOrderParameter = requiresProcessOrder.HasValue ?
                new ObjectParameter("requiresProcessOrder", requiresProcessOrder) :
                new ObjectParameter("requiresProcessOrder", typeof(bool));
    
            var unitOfIssueParameter = unitOfIssue != null ?
                new ObjectParameter("unitOfIssue", unitOfIssue) :
                new ObjectParameter("unitOfIssue", typeof(string));
    
            var isRawMaterialParameter = isRawMaterial.HasValue ?
                new ObjectParameter("isRawMaterial", isRawMaterial) :
                new ObjectParameter("isRawMaterial", typeof(bool));
    
            var vendorNameParameter = vendorName != null ?
                new ObjectParameter("vendorName", vendorName) :
                new ObjectParameter("vendorName", typeof(string));
    
            var sequenceNumberParameter = sequenceNumber.HasValue ?
                new ObjectParameter("sequenceNumber", sequenceNumber) :
                new ObjectParameter("sequenceNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MaterialInsert", materialNumberParameter, materialNameParameter, nameAbreviationParameter, permitNumberParameter, rawMaterialCodeParameter, productCodeParameter, carbonDrumRequiredParameter, carbonDrumDaysAllowedParameter, carbonDrumWeightAllowedParameter, batchManagedParameter, requiresProcessOrderParameter, unitOfIssueParameter, isRawMaterialParameter, vendorNameParameter, sequenceNumberParameter);
        }
    }
}
