//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RLRMWF
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class RLRMDBEntities : DbContext
    {
        public RLRMDBEntities()
            : base("name=RLRMDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__EFMigrationsHistory> C__EFMigrationsHistory { get; set; }
        public virtual DbSet<alphabeticDate> alphabeticDates { get; set; }
        public virtual DbSet<distilation> distilations { get; set; }
        public virtual DbSet<employee> employees { get; set; }
        public virtual DbSet<material> materials { get; set; }
        public virtual DbSet<materialId> materialIds { get; set; }
        public virtual DbSet<materialNumber> materialNumbers { get; set; }
        public virtual DbSet<product> products { get; set; }
        public virtual DbSet<productNumberSequence> productNumberSequences { get; set; }
        public virtual DbSet<qualityControl> qualityControls { get; set; }
        public virtual DbSet<rawMaterial> rawMaterials { get; set; }
        public virtual DbSet<receiver> receivers { get; set; }
        public virtual DbSet<vendor> vendors { get; set; }
        public virtual DbSet<vendorBatchInformation> vendorBatchInformations { get; set; }
    
        public virtual int rawMaterialUpdate(Nullable<int> materialNumber, string vendorName, string vendorBatchNumber, Nullable<int> drumWeight, Nullable<int> sapBatchNumber, string containerNumber, Nullable<decimal> processOrder, Nullable<int> quantity)
        {
            var materialNumberParameter = materialNumber.HasValue ?
                new ObjectParameter("materialNumber", materialNumber) :
                new ObjectParameter("materialNumber", typeof(int));
    
            var vendorNameParameter = vendorName != null ?
                new ObjectParameter("vendorName", vendorName) :
                new ObjectParameter("vendorName", typeof(string));
    
            var vendorBatchNumberParameter = vendorBatchNumber != null ?
                new ObjectParameter("vendorBatchNumber", vendorBatchNumber) :
                new ObjectParameter("vendorBatchNumber", typeof(string));
    
            var drumWeightParameter = drumWeight.HasValue ?
                new ObjectParameter("drumWeight", drumWeight) :
                new ObjectParameter("drumWeight", typeof(int));
    
            var sapBatchNumberParameter = sapBatchNumber.HasValue ?
                new ObjectParameter("sapBatchNumber", sapBatchNumber) :
                new ObjectParameter("sapBatchNumber", typeof(int));
    
            var containerNumberParameter = containerNumber != null ?
                new ObjectParameter("containerNumber", containerNumber) :
                new ObjectParameter("containerNumber", typeof(string));
    
            var processOrderParameter = processOrder.HasValue ?
                new ObjectParameter("processOrder", processOrder) :
                new ObjectParameter("processOrder", typeof(decimal));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("rawMaterialUpdate", materialNumberParameter, vendorNameParameter, vendorBatchNumberParameter, drumWeightParameter, sapBatchNumberParameter, containerNumberParameter, processOrderParameter, quantityParameter);
        }
    
        public virtual int sampleSubmit(string sampleNumber, Nullable<decimal> lotNumber)
        {
            var sampleNumberParameter = sampleNumber != null ?
                new ObjectParameter("sampleNumber", sampleNumber) :
                new ObjectParameter("sampleNumber", typeof(string));
    
            var lotNumberParameter = lotNumber.HasValue ?
                new ObjectParameter("lotNumber", lotNumber) :
                new ObjectParameter("lotNumber", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sampleSubmit", sampleNumberParameter, lotNumberParameter);
        }
    }
}
